000001                    ;; This is the very first "real" QNICE-FPGA test program which is and was used during the
000002                    ;; initial development of QNICE-FPGA by sy2002.
000003                    ;;
000004                    ;; It is inspired by vaxman's original test program "til_count.asm" that displays
000005                    ;; a count on the TIL-311 display on the original QNICE/A evaluation board.
000006                    
000007                    IO$TIL_BASE     .EQU    0xFF10                  ; Address of TIL-display
000008                    
000009                    ; QNICE-FPGA in the current early stage of development is running at about 20 MIPS. As the
000010                    ; inner loop consists of two instructions, we need to count to about 10.000.000 for having
000011                    ; the effect of an 1 Hz incrementing counter on the TIL.
000012                    ; So we choose WAIT_CYCLES1 as 5.000 equ 0x1388 and WAIT_CYCLES2 as 2.000 equ 0x07D0
000013                    WAIT_CYCLES1    .EQU    0x1388
000014                    WAIT_CYCLES2    .EQU    0x07D0
000015                    
000016                                    .ORG    0x0000                  ; Start address
000017  0000  0F80  0000                  MOVE    0x0000, R0              ; Clear R0
000018  0002  0F84  FF10                  MOVE    IO$TIL_BASE, R1         ; Base address of TIL-display for output
000019  0004  0005        LOOP            MOVE    R0, @R1                 ; Write contents of R0 to the TIL-display
000020                    
000021  0005  0F8C  07D0                  MOVE    WAIT_CYCLES2, R3
000022  0007  0F88  1388  WAIT_LOOP2      MOVE    WAIT_CYCLES1, R2
000023  0009  3F88  0001  WAIT_LOOP1      SUB     1, R2                   ; Decrement loop counter
000024  000B  FFAB  FFFC                  RBRA    WAIT_LOOP1, !Z           ; If not zero, perform next loop
000025  000D  3F8C  0001                  SUB     1, R3
000026  000F  FFAB  FFF6                  RBRA    WAIT_LOOP2, !Z
000027                    
000028  0011  1F80  0001                  ADD     1, R0                   ; Increment R0
000029  0013  FFAB  FFEF                  RBRA    LOOP, !Z                ; Unconditional jump to display the next value


EQU-list:
--------------------------------------------------------------------------------------------------------
IO$TIL_BASE             : 0xFF10    WAIT_CYCLES1            : 0x1388    WAIT_CYCLES2            : 0x07D0    

Label-list:
--------------------------------------------------------------------------------------------------------
LOOP                    : 0x0004    WAIT_LOOP2              : 0x0007    WAIT_LOOP1              : 0x0009    
