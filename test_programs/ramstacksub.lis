000001                    ; tests RAM, stack and the sub routine calls ASUB and RSUB
000002                    ; expects RAM to start at $8000, so works for example in environment "env1"
000003                    ; done by sy2002 on August, 1st 2015
000004                    
000005  0000  0F80  8000          MOVE 0x8000, R0
000006  0002  0F82  5DA8          MOVE 0x5DA8, @R0++
000007  0004  0F82  1000          MOVE 0x1000, @R0++
000008  0006  0F82  0100          MOVE 0x0100, @R0++
000009  0008  0F82  0010          MOVE 0x0010, @R0++
000010  000A  0F82  0001          MOVE 0x0001, @R0++
000011  000C  0F82  1111          MOVE 0x1111, @R0++
000012  000E  0F82  FFFF          MOVE 0xFFFF, @R0++
000013                    
000014  0010  0F80  8000          MOVE 0x8000, R0
000015  0012  0F84  8010          MOVE 0x8010, R1
000016  0014  0F88  0007          MOVE 0x0007, R2
000017  0016  0F8C  0001          MOVE 0x0001, R3
000018                    
000019  0018  0086        COPY    MOVE @R0++, @R1++
000020  0019  3308                SUB R3, R2
000021  001A  FFAB  FFFC          RBRA COPY, !Z
000022                    
000023  001C  E000        HALT


EQU-list:
--------------------------------------------------------------------------------------------------------

Label-list:
--------------------------------------------------------------------------------------------------------
COPY                    : 0x0018    
