FINALIZING THE CURRENT "STREAK" of FPGA + Q-TRIS:

* Q-TRIS V1.0: Implement winning the game (>= 1.000 lines), take care that
  upleveling does not lead to undefined memory locations (table). Optimize
  some code parts (at least those resulting from the CPU fix).

* Q-TRIS and/or Monitor: Stand alone auto-starting Q-TRIS bitstream. Do it in
  the most simple form, which is: make it an .org 0x0000 startable executable,
  move the variables that need to be in RAM via other .org commands. (That
  means, we need a simple multiplication command outside the monitor.)

* Test Q-TRIS thoroughly again by playing a ~250+ lines session.

* Make a V1.21 release of the hardware and the whole package (and include
  the Q-TRIS as a stand alone released bitstream)

HARDWARE:

* Remove ROM and replace by prefilled RAM

* Memory management unit (more than 64kWords of RAM/ROM, pages, etc.)

* Interrupt system

* Debugging mechanisms (e.g. single-step mode in hardware)

* Fix tristate problem that slows down CPU by ~50%

* Improve design to support 100 MHz

* Keyboard: remove hardcoded hardcoded 18000

* Refactor scancode conversion to be more table/ROM like and less
  like a huge array of multiplexers

* Add a timer with 0,1us Resolution (10 MHz frequency), so that
  we can measure performance (e.g. against the emulator)

* Refactor MMIO for not having so many comperators

* Refactor TIL and TIL Mask to support 8 digits / 32 bits

* Refactor Video RAM: avoid inferring two RAMs for video RAM

* VGA being able to report the vertical retrace for flicker-free graphics,
  e.g. for being able to enhance Q-TRIS to work double-buffered and to
  switch buffers during retrace. And/or for having a good general sync.
  mechanism. To "report" via register and/or interrupt.

MONITOR and/or STANDARD LIBs:

* Backspace and CTRL-U support in IO$GETS

* Basic mathematical routines * (exists), / (from decimal.asm?), % (ditto?)

* Decimal converter (from decimal.asm?)

* 32 bit arithmetic

* Long term: Floating point support

ASSEMBLER:

* Issue a warning, when defining a label multiple times.

* Issue a warning when doing e.g. CMP R0, 0x20, as this won't work.
  (comparing register or @register with constant).
